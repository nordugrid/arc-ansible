
---
# tasks file for ansible-role-arc-frontend

##################################################
## ENSURE shared storage ARC dirs are present
##################################################

- name: Create sessiondirs for nfs mounted sessiondirs
  file: 
    path: "{{ griddir }}/{{sessionbasename}}{{ item | regex_search('(\\d+)(?!.*\\d)') }}"
    state: directory
    recurse: yes
  with_items: "{{ groups['datadelivery'] }}"
  when: sessionbasename|length >0 


- name: Create cachedirs for nfs mounted cachedirs
  file: 
    path: "{{ griddir }}/{{cachebasename}}{{ item | regex_search('(\\d+)(?!.*\\d)') }}"
    state: directory
    recurse: yes
  with_items: "{{ groups['datadelivery'] }}"
  when: cachebasename|length >0




##################################################
## INSTALLATION AND CONFIGURATION OF ARC
##################################################

- name: Include installation play for standard installation from nordugrid repo (rhel)
  include: install_arc_rhel.yml
  tags: 
    - installarc
  when: ansible_os_family == "RedHat"

- name: Include installation play for standard installation from nordugrid repo (deb)
  include: install_arc_deb.yml
  tags: 
    - installarc
  when: ansible_os_family == "Debian"

- name: Template arc.conf (arc.conf.j2) file
  template: 
    backup: yes
    src: arc.conf.j2
    dest: /etc/arc.conf 
    owner: root
    group: root
    mode: '0644'
  tags: 
    - installarc
    - arcconf

- name: Install igtf package (deb)
  apt:
    name: igtf-policy-*
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"


- name: Install igtf package (deb)
  apt:
    name: fetch-crl
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  ignore_errors: yes


- name: Install CA's
  shell: "arcctl deploy igtf-ca classic"

- name: Run test-cert init
  shell: "arcctl test-ca init -f -v 3600"

- name: Run test-cert hostcert
  shell: "arcctl test-ca hostcert -f -v 3600"

- name: Run test-cert usercert install
  shell: "arcctl test-ca usercert -i {{ default_user.user }} -f -v 3600"


## Runtime dir
###############

- name: ATLAS specific RTEs
  include: atlas.yml
  tags:
    - installarc
    - runtime
    - atlas
    - atlas_frontend
  when: site_type == "atlas"


## Attempt to start ARC
##########################

- name: Start ARC
  shell: "arcctl service start -a"
  ignore_errors: yes
  



#########################
## ARC test files
#########################
- name: Place testing scripts on frontend
  include: arctesting.yml
  tags: arctesting
  when: (inventory_hostname in groups['frontend'])


...
