# task for file installing ARC


######### Get GPG keys (rhel)
- name: Install nordugrid rpm key 
  rpm_key: 
    key: http://download.nordugrid.org/RPM-GPG-KEY-nordugrid-6
    state: present


#########  Install nordugrid repo 
- name: Install nordugrid repo for {{ nordugrid_os_dir }} (rhel > 7)
  yum: 
    name: "https://download.nordugrid.org/packages/nordugrid-release/releases/{{ nordugrid_release_v }}/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/x86_64/nordugrid-release-{{ nordugrid_release_v }}-1.el{{ nordugrid_os_v }}.noarch.rpm"
  when: ansible_distribution_major_version|int > 7 and (use_repo == "nordugrid-nightlies" or use_repo == "nordugrid")

- name: Enable Powertools (rhel 8)
  shell:  yum config-manager --set-enabled powertools 
  when: ansible_distribution_major_version|int == 8


- name: Enable crb repo (el9)
  shell: dnf config-manager --set-enabled crb
  when: ansible_distribution_major_version|int == 9


######## Option1: ARC release installation ################
- name: Install nordugrid repo
  copy:
    dest: /etc/yum.repos.d/nordugrid.repo
    content: |
     [nordugrid]
     name=NorduGrid - $basearch - Testing
     baseurl=http://download.nordugrid.org/repos/7/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/$basearch/base
     enabled=1
     gpgcheck=1
     gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nordugrid-6

     [nordugrid-updates]
     name=NorduGrid - $basearch - updates
     baseurl=http://download.nordugrid.org/repos/7/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/$basearch/testing/updates
     enabled=1
     gpgcheck=1
     gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nordugrid-6

  when: use_repo == "nordugrid"
########## End option 1



######## Option2: ARC nightly installation ################
- name: Create cron job for updating nightly date
  template: 
    dest: /etc/cron.daily/update-arc-nightly-time.sh
    src: templates/update-arc-nightly-time.sh
    mode: 0755
  when: use_repo == "nordugrid-nightly"
    
- name: Trigger the nightly date
  command: "/bin/sh /etc/cron.daily/update-arc-nightly-time.sh"
  when: use_repo == "nordugrid-nightly"


- name: Install nordugrid-nightly repo
  copy:
    dest: /etc/yum.repos.d/nordugrid-nightly.repo
    content: |
      [nordugrid-nightly]
      name=Nordugrid ARC {{ arc_branch }} Nightly Builds - $basearch
      baseurl=http://builds.nordugrid.org/nightlies/nordugrid-arc/{{ arc_branch }}/$arcnightly/{{ nordugrid_os_dir }}/{{ nordugrid_os_v}}/$basearch
      enabled=1
      gpgcheck=0
  when: use_repo == "nordugrid-nightly"
########## End option 2


######## Option3: ARC testing installation ################
- name: Install nordugrid-testing repo
  copy:
    dest: /etc/yum.repos.d/nordugrid-testing.repo
    content: |
     [nordugrid-testing]
     name=NorduGrid - $basearch - Testing
     baseurl=http://download.nordugrid.org/repos/7/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/$basearch/testing
     enabled=1
     gpgcheck=1
     gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nordugrid-6

     [nordugrid-testing-debuginfo]
     name=NorduGrid - $basearch - Testing - Debug
     baseurl=http://download.nordugrid.org/repos/7/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/$basearch/testing/debug
     enabled=0
     gpgcheck=1
     gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nordugrid-6

     [nordugrid-testing-source]
     name=NorduGrid - Testing - Source
     baseurl=http://download.nordugrid.org/repos/7/{{ nordugrid_os_dir }}/{{ nordugrid_os_v }}/source/testing
     enabled=0
     gpgcheck=1
     gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-nordugrid-6
  when: use_repo == "nordugrid-testing"
########## End option 3


- name: Update yum cache
  command: "yum makecache"


- name: Install nordugrid-arc-arex
  yum: 
    name: nordugrid-arc-arex
    enablerepo: "{{ use_repo }}"
    state: present
    disable_gpg_check: yes


- name: Install nordugrid-arc-client
  yum: 
    name: nordugrid-arc-client
    enablerepo: "{{ use_repo }}"
    state: present
    disable_gpg_check: yes


- name: Install nordugrid-arc-plugins-arcrest
  yum: 
    name: nordugrid-arc-plugins-arcrest
    enablerepo: "{{ use_repo }}"
    state: present
    disable_gpg_check: yes
  when: use_repo  == "nordugrid"

###################################################





  
